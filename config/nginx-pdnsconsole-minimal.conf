# PDNS Console Nginx Configuration (Minimal Version)
# For hostname: dev.pdnsconsole.com
# Document root: /var/www/pdnsconsole/webroot
# This version avoids SSL protocol conflicts

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name dev.pdnsconsole.com;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev.pdnsconsole.com;
    
    # Document root
    root /var/www/pdnsconsole/webroot;
    index index.php index.html;
    
    # SSL Configuration (certificates only - protocols inherit from global config)
    ssl_certificate /etc/ssl/private/_.pdnsconsole.com.crt;
    ssl_certificate_key /etc/ssl/private/_.pdnsconsole.com.key;
    
    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Logging
    access_log /var/log/nginx/pdnsconsole_access.log;
    error_log /var/log/nginx/pdnsconsole_error.log;
    
    # Main location block - PHP handling
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP-FPM handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;  # Adjust PHP version as needed
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security headers for PHP files
        fastcgi_param HTTPS on;
        fastcgi_param REQUEST_SCHEME https;
    }
    
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\.(ht|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to config files
    location ~* \.(conf|cnf|sql|sh|key)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~* \.(bak|backup|old|orig|save)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
